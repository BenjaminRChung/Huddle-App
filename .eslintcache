[{"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\index.js":"1","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\App.tsx":"3","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\LoginPage\\index.tsx":"4","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\ExplorePage\\index.tsx":"5","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\ProfilePage\\index.tsx":"6","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\SignupPage\\index.tsx":"7","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\components\\CustomNavbar\\index.tsx":"8","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\LandingPage\\index.tsx":"9","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\constants.js":"10","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\ExplorePage\\Card.tsx":"11"},{"size":565,"mtime":1623641131390,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1623641131416,"results":"14","hashOfConfig":"13"},{"size":962,"mtime":1625288198411,"results":"15","hashOfConfig":"13"},{"size":2471,"mtime":1627659919215,"results":"16","hashOfConfig":"13"},{"size":1631,"mtime":1623641131398,"results":"17","hashOfConfig":"13"},{"size":181,"mtime":1623641131408,"results":"18","hashOfConfig":"13"},{"size":177,"mtime":1623641131410,"results":"19","hashOfConfig":"13"},{"size":1082,"mtime":1643171203886,"results":"20","hashOfConfig":"13"},{"size":9094,"mtime":1643171203891,"results":"21","hashOfConfig":"13"},{"size":38,"mtime":1625288198414,"results":"22","hashOfConfig":"13"},{"size":858,"mtime":1623641131394,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mvet59",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\index.js",[],"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\App.tsx",["51"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\nimport Landing from \"./pages/LandingPage/index\";\r\nimport Login from \"./pages/LoginPage/index\";\r\nimport Explore from \"./pages/ExplorePage/index\";\r\nimport Profile from \"./pages/ProfilePage/index\";\r\nimport CustomNavbar from \"./components/CustomNavbar/index\";\r\nimport SignUp from \"./pages/SignupPage/index\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CustomNavbar />\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={Landing} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/explore' component={Explore} />\r\n          <Route exact path='/profile' component={Profile} />\r\n          <Route exact path='/signup' component={SignUp} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\LoginPage\\index.tsx",[],"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\ExplorePage\\index.tsx",["52","53"],"import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport { Container, Form } from 'react-bootstrap';\r\nimport styles from './index.module.css'\r\n\r\nconst data = [\r\n    {\r\n        \"id\": 1,\r\n        \"description\": \"A text editor is at the core of a developer’s toolbox, but it doesn't usually work alone. Work with Git and GitHub directly from Atom with the GitHub package.\",\r\n        \"title\": \"Atom\",\r\n        \"imgSrc\": \"atom.svg\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"description\": \"A text editor is at the core of a developer’s toolbox, but it doesn't usually work alone. Work with Git and GitHub directly from Atom with the GitHub package.\",\r\n        \"title\": \"Apache\",\r\n        \"imgSrc\": \"apache.svg\"\r\n    }\r\n];\r\n\r\nlet projectCards = data.map((project, i) => {\r\n    return  (\r\n        <div className={styles.ExploreCard}>\r\n            <Card\r\n                title={project.title}\r\n                description={project.description}\r\n                imgSrc={project.imgSrc}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n\r\nconst ExplorePage = () => {\r\n    const [val, setVal] = useState(\"\");\r\n\r\n    const handleChange = (e: any) => {\r\n        setVal(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className={styles.ExploreHeader}>Explore</h1>\r\n            <Form className={styles.SearchBar}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Control type=\"text\" placeholder=\"Search Projects\" />\r\n                </Form.Group>\r\n            </Form>\r\n            { projectCards }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ExplorePage;\r\n","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\ProfilePage\\index.tsx",[],"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\SignupPage\\index.tsx",[],"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\components\\CustomNavbar\\index.tsx",["54","55","56","57"],"import React from 'react';\r\nimport { Navbar, NavDropdown, FormControl, Button, Form, Nav, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styles from \"./index.module.scss\";\r\nimport * as constants from '../../constants';\r\n\r\nconst CustomNavbar = () => {\r\n    return (\r\n        <Navbar className={styles.NavBar} collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n          <img className={styles.LogoImage} src=\"Logo.png\" alt=\"card\" />\r\n          <Navbar.Brand href=\"/\">{constants.COMPANY_NAME}</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link className={styles.NavItem} href=\"/\">Home</Nav.Link>\r\n              <Nav.Link className={styles.NavItem} href=\"/explore\">Explore</Nav.Link>\r\n              <Nav.Link className={styles.NavItem} href=\"/profile\">Profile</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default CustomNavbar;","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\LandingPage\\index.tsx",["58","59","60"],"import React, { useState } from 'react';\r\nimport styles from './index.module.scss'\r\nimport { Button, Form, Row, Col} from 'react-bootstrap';\r\nimport * as constants from '../../constants';\r\nimport {useForm} from 'react-hook-form';\r\nimport validator from 'validator';\r\n\r\ninterface IFormInputs {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n}\r\n\r\nconst LandingPage = () => {\r\n    const [active, setActive] = useState(false);\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [showEmailErr, setShowEmailErr] = useState<boolean>(false)\r\n\r\n    const handleStayTunedBtn = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n\r\n        if (!validator.isEmail(email)) {\r\n            console.log('invalid email')\r\n            setShowEmailErr(true);\r\n        }\r\n    }\r\n\r\n    const onEmailChange =  (e: React.ChangeEvent<any>) => {\r\n        setShowEmailErr(false)\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const {\r\n        register,\r\n        handleSubmit\r\n    } = useForm<IFormInputs>();\r\n\r\n    const onSubmit = (data: IFormInputs) => {\r\n        alert(JSON.stringify(data));\r\n      };\r\n\r\n    const stayTunedElement: HTMLCollectionOf<Element> = document.getElementsByClassName('LandingPage_StayTuned__1MWM8')!;\r\n\r\n    const scrollToStayTuned = () => {\r\n      stayTunedElement[0].scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    };\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Row className={styles.LandingPage}>\r\n                <div className={styles.LeftBlock}>\r\n                    <h1>\r\n                        Welcome to the {constants.COMPANY_NAME} Community!\r\n                    </h1>\r\n                    <h3>\r\n                        A one stop platform for knowledge sharing, collaboration, and code reviews!\r\n                    </h3>\r\n                    <Button className={styles.LandingPageBtn} onClick = {scrollToStayTuned} variant=\"outline-light\" size=\"lg\">Join Our Community</Button> \r\n                </div>\r\n                <div className={styles.RightBlock}>\r\n                    <img className={styles.LandingImage} src=\"landing-image.png\" alt=\"card\" />\r\n                </div>\r\n                <div className={styles.WaveContainer}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#367BC9\" fill-opacity=\"1\" d=\"M0,224L30,218.7C60,213,120,203,180,170.7C240,139,300,85,360,96C420,107,480,181,540,186.7C600,192,660,128,720,90.7C780,53,840,43,900,42.7C960,43,1020,53,1080,85.3C1140,117,1200,171,1260,208C1320,245,1380,267,1410,277.3L1440,288L1440,0L1410,0C1380,0,1320,0,1260,0C1200,0,1140,0,1080,0C1020,0,960,0,900,0C840,0,780,0,720,0C660,0,600,0,540,0C480,0,420,0,360,0C300,0,240,0,180,0C120,0,60,0,30,0L0,0Z\"></path></svg>\r\n                </div>\r\n\r\n                <div className={styles.MissionSection}>\r\n                    <h3>Who Are We</h3>\r\n\r\n                    <Row className={styles.MissionSelectionRow}>\r\n                        <Col md={4}>\r\n                            <h2>Mission</h2>\r\n                            <p>Reviere connects aspiring and experienced developers together to share projects and give feedback.</p>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <img src=\"desk-animated.gif\" alt=\"This will display an animated GIF\" className={styles.DeskGif}/>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <h2>Vision</h2>\r\n                            <p>Reviere aims to be the leading platform for developers of all skill levels to share and review code. Like StackOverFlow, we want to create a community that shares ideas and supports one another.</p>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n                <div className={styles.LeftBlockAlt}>\r\n                    <div className={styles.FaqHeader}>\r\n                        <h1>\r\n                            How It Works\r\n                        </h1>\r\n                        <h3>\r\n                            Learn more about our features\r\n                        </h3>\r\n                        <Button onClick = {scrollToStayTuned} variant=\"outline-dark\" size=\"lg\">Come Along!</Button> \r\n                    </div>\r\n                </div>\r\n                <div className={styles.RightBlockAlt}>\r\n                    <div className={styles.RightBlockAltRow}>\r\n                        <Col>\r\n                            <img className={ styles.FaqIcon } src=\"signup-icon.png\" alt=\"card\" />\r\n                            <h2 className={ styles.FaqSubHeading }>Sign Up</h2>\r\n                            <div>Sign up to personalize your experience and utilize our full suite of features such as messaging, reviewing, and making posts.</div>\r\n                        </Col>\r\n                        <Col>\r\n                        <img className={ styles.FaqIcon } src=\"explore-icon.png\" alt=\"card\" />\r\n                            <h2 className={ styles.FaqSubHeading }>Explore and Post</h2>\r\n                            <div>Search for posts by categories such as trending or technologies. Comment and save posts which are interesting to you! If you have your own project you would like to share, make a post!</div>\r\n                        </Col>\r\n                        <Col>\r\n                        <img className={ styles.FaqIcon } src=\"review-icon.png\" alt=\"card\" />\r\n                            <h2 className={ styles.FaqSubHeading }>Review</h2>\r\n                            <div>Help other developers in the community by providing code reviews on posted projects. If you would like feedback on your own project, enable reviewers on your post!</div>\r\n                        </Col>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.WaveContainerAlt}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#367BC9\" fill-opacity=\"1\" d=\"M0,32L34.3,26.7C68.6,21,137,11,206,53.3C274.3,96,343,192,411,208C480,224,549,160,617,138.7C685.7,117,754,139,823,170.7C891.4,203,960,245,1029,240C1097.1,235,1166,181,1234,165.3C1302.9,149,1371,171,1406,181.3L1440,192L1440,320L1405.7,320C1371.4,320,1303,320,1234,320C1165.7,320,1097,320,1029,320C960,320,891,320,823,320C754.3,320,686,320,617,320C548.6,320,480,320,411,320C342.9,320,274,320,206,320C137.1,320,69,320,34,320L0,320Z\"></path></svg>\r\n                </div>\r\n                <div className={styles.StayTuned}>\r\n                    <h1>\r\n                        Stay Tuned\r\n                    </h1>\r\n                    <h3>\r\n                        Sign up to receive updates about the launch and be the first to join the community!\r\n                    </h3>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className={styles.StayTunedFields}> \r\n                            <div className={styles.FirstName}>\r\n                                <label>First Name</label>\r\n                                <input\r\n                                    placeholder=\"Kotaro\"\r\n                                    className={styles.StayTunedInput}\r\n                                    value={firstName}\r\n                                    onChange={e => setFirstName(e.target.value)}\r\n                                 />\r\n                            </div>\r\n\r\n                            <div className={styles.LastName}>\r\n                                <label >Last Name</label>\r\n                                <input\r\n                                    placeholder=\"Sugawara\"\r\n                                    className={styles.StayTunedInput}\r\n                                    value={lastName}\r\n                                    onChange={e => setLastName(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={styles.Email}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    placeholder=\"bluebill1049@hotmail.com\"\r\n                                    type=\"email\"\r\n                                    className={styles.StayTunedInput}\r\n                                    value={email}\r\n                                    onChange={e => onEmailChange(e)}\r\n                                />\r\n                            </div>\r\n                            <Button type=\"submit\" className={styles.StayTunedButton} onClick={(e) => handleStayTunedBtn(e)}>Submit</Button>\r\n                        </div>\r\n\r\n                    </Form>\r\n                    {\r\n                        showEmailErr ?\r\n                            <p className={styles.EmailErr}>Your email is invalid</p>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LandingPage;\r\n\r\n\r\n","C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\constants.js",[],"C:\\Users\\tyler\\Desktop\\Projects\\huddle-frontend\\src\\pages\\ExplorePage\\Card.tsx",["61"],"import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport styles from './index.module.css'\r\n\r\ninterface CardProps {\r\n    title: string,\r\n    description: string,\r\n    imgSrc: string,\r\n}\r\n\r\n\r\nconst Card = ({ title, description, imgSrc }: CardProps) => {\r\n    return (\r\n    <Row className={styles.CardBody}>\r\n        <Col md={3} className={styles.CardImageDiv}>\r\n            <img className={styles.CardImage} src={imgSrc} alt=\"card image\" />\r\n        </Col>\r\n\r\n        <Col md={9}>\r\n            <div className={styles.CardInfo}>\r\n                <div className={styles.CardTitle}>\r\n                    {title}\r\n                </div>\r\n                <div className={styles.CardDescription}>\r\n                    {description}\r\n                </div>\r\n            </div>\r\n        </Col>    \r\n    </Row>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n",{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":34,"column":12,"nodeType":"64","messageId":"65","endLine":34,"endColumn":15},{"ruleId":"62","severity":1,"message":"67","line":36,"column":11,"nodeType":"64","messageId":"65","endLine":36,"endColumn":23},{"ruleId":"62","severity":1,"message":"68","line":2,"column":18,"nodeType":"64","messageId":"65","endLine":2,"endColumn":29},{"ruleId":"62","severity":1,"message":"69","line":2,"column":31,"nodeType":"64","messageId":"65","endLine":2,"endColumn":42},{"ruleId":"62","severity":1,"message":"70","line":2,"column":44,"nodeType":"64","messageId":"65","endLine":2,"endColumn":50},{"ruleId":"62","severity":1,"message":"71","line":2,"column":52,"nodeType":"64","messageId":"65","endLine":2,"endColumn":56},{"ruleId":"62","severity":1,"message":"72","line":15,"column":12,"nodeType":"64","messageId":"65","endLine":15,"endColumn":18},{"ruleId":"62","severity":1,"message":"73","line":15,"column":20,"nodeType":"64","messageId":"65","endLine":15,"endColumn":29},{"ruleId":"62","severity":1,"message":"74","line":36,"column":9,"nodeType":"64","messageId":"65","endLine":36,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":16,"column":13,"nodeType":"77","endLine":16,"endColumn":79},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'val' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'register' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]